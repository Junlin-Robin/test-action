name: Create Tag And Deploy In PROD_ENV

on:
  pull_request:
    branches:
      - master
    types: [closed]

jobs:
  createTag:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # 确保获取所有历史以便正确生成标签

      - name: Setup Git
        run: |
          echo "🏠 Setting global git config informations"
          git config --global user.email "347258143@qq.com"
          git config --global user.name "Github-action"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Create and Push Tag
        run: |
          # 生成新的tag标签，格式为v-[YYYY-MM-DD]-[index]
          # echo "🪄 Start create new tag from latest master"

          # echo "🔍 Searching last tag name..."
          # LAST_TAG_NAME=$(git describe --tags `git rev-list --tags --max-count=1`) || LAST_TAG_NAME="v-$(date +%Y%m%d)-0"
          # echo "💡 Last tag is $LAST_TAG_NAME"

          # echo "⌛️ Creating a new tag..."
          # # 匹配上一个tag的序列号
          # declare -i LAST_TAG_INDEX
          # LAST_TAG_INDEX=${LAST_TAG_NAME##*-} || LAST_TAG_INDEX=0
          # # 生成新的tag名称
          # NEW_TAG_NAME="v-$(date +%Y%m%d)-$((LAST_TAG_INDEX + 1))"
          # echo "💡 New tag is $NEW_TAG_NAME"

          # echo "::set-output name=TAG::$NEW_TAG_NAME"

          echo "🚀 Pushing new tag to origin..."
          git checkout master
          npm version patch -m "Upgrade to %s for reasons"
          # git tag $NEW_TAG_NAME -m 'test for only'
          git push "https://github.com/Junlin-Robin/test-action.git"
          echo "✅ Finish create and push tag job"

  deploy-in-production:
    needs: createTag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # 确保获取所有历史以便正确生成标签

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Lint
        run: yarn run lint

      - name: Install Dependencies
        run: yarn
      
      - name: Build
        run: |
          ENV=production
          echo "Current environment is production 🏭"
          echo "ENV=$ENV" >> $GITHUB_ENV

          CURRENT_TAG=${{ needs.create-tag.outputs.TAG }}
          echo "Current tag is $CURRENT_TAG 🌿"

          echo "OUT_DIR=$(grep 'REACT_BUILD_OUT_DIR' .env.$ENV | cut -d '=' -f2)" >> $GITHUB_ENV

          git checkout master

          yarn run build -- --mode $ENV

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4.3.3
        with:
          branch: gh-pages     # 部署到 gh-pages 分支
          folder: ${{ env.OUT_DIR }} # 部署目录见配置
          target-folder: /${{ env.ENV }} # 部署根目录
          clean: true     # 先清理之前的部署
          token: ${{ secrets.GITHUB_TOKEN }}

    




      
